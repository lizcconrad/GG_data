strict digraph  {
idSpider1 [node_type=entity_node];
black [node_type=property_node];
dead [node_type=property_node];
idSpiderWeb1 [node_type=entity_node];
idCavern6 [node_type=entity_node];
idGrass1 [node_type=entity_node];
idCavern1 [node_type=entity_node];
idCavern2 [node_type=entity_node];
idCavern1LeftOpening [node_type=entity_node];
idCavern3LeftOpening [node_type=entity_node];
idCavern3 [node_type=entity_node];
idCavern2RightOpening [node_type=entity_node];
idCavern4BackOpening [node_type=entity_node];
idCavern1FrontOpening [node_type=entity_node];
idCavern1RightOpening [node_type=entity_node];
idGlowingFlower1 [node_type=entity_node];
idLiquid1 [node_type=entity_node];
idMushroom1 [node_type=entity_node];
idPlayer [node_type=entity_node];
idPlayerBackside [node_type=entity_node];
idPlayerLeftHand [node_type=entity_node];
idPlayerRightHand [node_type=entity_node];
idCavern5BackOpening [node_type=entity_node];
idCavern5 [node_type=entity_node];
idCavern7 [node_type=entity_node];
idCavern7LeftOpening [node_type=entity_node];
idCavern6FrontOpening [node_type=entity_node];
idCavern5LeftOpening [node_type=entity_node];
idCavern8 [node_type=entity_node];
idCavern8RightOpening [node_type=entity_node];
idCavern7BackOpening [node_type=entity_node];
idCavern7RightOpening [node_type=entity_node];
idBoulder2 [node_type=entity_node];
idDeerSkeleton1 [node_type=entity_node];
idCavern4 [node_type=entity_node];
idCavern4FrontOpening [node_type=entity_node];
idBoulder1 [node_type=entity_node];
idSpider1 -> black  [edge_type=property, label=idSpider1_prop_idColor];
idSpider1 -> dead  [edge_type=property, label=idSpider1_prop_idDescriptor];
idSpider1 -> idSpiderWeb1  [edge_type=relationship, label=isNear];
idSpider1 -> idCavern6  [edge_type=relationship, label=isNear];
idSpider1 -> idGrass1  [edge_type=relationship, label=isNear];
idSpider1 -> idCavern1  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern2  [edge_type=relationship, label=isNorthOf];
idSpider1 -> idCavern1LeftOpening  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern3LeftOpening  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern3  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern2RightOpening  [edge_type=relationship, label=isNorthOf];
idSpider1 -> idCavern4BackOpening  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern1FrontOpening  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern1RightOpening  [edge_type=relationship, label=isWestOf];
idSpider1 -> idGlowingFlower1  [edge_type=relationship, label=isWestOf];
idSpider1 -> idLiquid1  [edge_type=relationship, label=isNorthOf];
idSpider1 -> idMushroom1  [edge_type=relationship, label=isWestOf];
idSpider1 -> idPlayer  [edge_type=relationship, label=isWestOf];
idSpider1 -> idPlayerBackside  [edge_type=relationship, label=isWestOf];
idSpider1 -> idPlayerLeftHand  [edge_type=relationship, label=isWestOf];
idSpider1 -> idPlayerRightHand  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern5BackOpening  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern5  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern7  [edge_type=relationship, label=isSouthOf];
idSpider1 -> idCavern7LeftOpening  [edge_type=relationship, label=isEastOf];
idSpider1 -> idCavern6FrontOpening  [edge_type=relationship, label=isSouthOf];
idSpider1 -> idCavern5LeftOpening  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern8  [edge_type=relationship, label=isEastOf];
idSpider1 -> idCavern8RightOpening  [edge_type=relationship, label=isEastOf];
idSpider1 -> idCavern7BackOpening  [edge_type=relationship, label=isSouthOf];
idSpider1 -> idCavern7RightOpening  [edge_type=relationship, label=isWestOf];
idSpider1 -> idBoulder2  [edge_type=relationship, label=isSouthOf];
idSpider1 -> idDeerSkeleton1  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern4  [edge_type=relationship, label=isWestOf];
idSpider1 -> idCavern4FrontOpening  [edge_type=relationship, label=isWestOf];
idSpider1 -> idBoulder1  [edge_type=relationship, label=isWestOf];
}
